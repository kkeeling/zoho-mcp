name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux-x64
            python-version: '3.11'
          - os: macos-latest
            platform: macos-x64
            python-version: '3.11'
          - os: macos-14
            platform: macos-arm64
            python-version: '3.11'
          - os: windows-latest
            platform: win-x64
            python-version: '3.11'

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller>=6.0.0
    
    - name: Build executable
      run: python build_executable.py
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: zoho-mcp-server-${{ matrix.platform }}
        path: dist/zoho-mcp-server-*
    
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload Release Assets
      run: |
        for file in artifacts/*/zoho-mcp-server-*; do
          echo "Uploading $file"
          gh release upload ${{ github.ref_name }} "$file" --clobber
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  publish-npm:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Wait for release assets
      run: sleep 60  # Give GitHub time to process the uploads
    
    - name: Update package version
      run: |
        cd npm
        VERSION=${GITHUB_REF#refs/tags/v}
        npm version $VERSION --no-git-tag-version
    
    - name: Publish to npm
      run: |
        cd npm
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}